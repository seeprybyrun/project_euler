/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
using namespace std;

int main ()
{

    const int MAX = 4000000; // four million

    /*
    int a = 1;
    int b = 2;
    int count = 2; // tells which term of the sequence b is currently at
    int sum = 0;
    while( b <= MAX ) {
        if(count%3==2) sum += b;
        b = a+b; // b becomes a+b
        a = b-a; // a becomes the old b
        ++count;
    }
    cout << sum;
    */

    // alternative solution using fact that a_n = 4a_{n-3} + a_{n-6}
    int a = 2;
    int b = 8;
    int sum = 2;
    while( b <= MAX ) {
        sum += b;
        int t = b;
        b = 4*b+a;
        a = t;
    }

    cout << sum;

    return 0;
}

// EOF
